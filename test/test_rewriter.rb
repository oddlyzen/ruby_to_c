#!/usr/local/bin/ruby -w

$TESTING = true

require 'test/unit' if $0 == __FILE__
require 'rewriter'
require 'r2ctestcase'
require 'pt_testcase'

ParseTreeTestCase.testcase_order << "Rewriter"

class TestRewriter < ParseTreeTestCase
  def setup
    super
    @processor = Rewriter.new
  end

  def self.add_test name, data, klass = self.name[4..-1]
    sexp = Sexp.from_array(testcases[name]["ParseTree"])
    if data == :same then
      super(name, sexp, klass)
    else
      warn "add_test(#{name.inspect}, :same)" if data == sexp
      super(name, Sexp.from_array(data), klass)
    end
  end


  add_test("alias", :same)
  add_test("alias_ugh", :same)
  add_test("and", :same)
  add_test("argscat_inside", :same)
  add_test("argscat_svalue", :same)
  add_test("argspush", :same)
  add_test("array", :same)
  add_test("array_pct_W", :same)
  add_test("attrasgn", :same)
  add_test("attrasgn_index_equals", :same)
  add_test("attrasgn_index_equals_space", :same)

  add_test("attrset",
           s(:defn, :writer=,
             s(:args, :arg),
             s(:scope,
               s(:block,
                 s(:return, s(:iasgn, :@writer, s(:lvar, :arg)))))))

  add_test("back_ref", :same)
  add_test("begin", :same)
  add_test("begin_def", :same)
  add_test("begin_rescue_ensure", :same)
  add_test("begin_rescue_twice", :same)
  add_test("block_lasgn", :same)
  add_test("block_mystery_block", :same)
  add_test("block_pass_args_and_splat", :same)
  add_test("block_pass_call_0", :same)
  add_test("block_pass_call_1", :same)
  add_test("block_pass_call_n", :same)
  add_test("block_pass_fcall_0", :same)
  add_test("block_pass_fcall_1", :same)
  add_test("block_pass_fcall_n", :same)
  add_test("block_pass_omgwtf", :same)
  add_test("block_pass_splat", :same)
  add_test("block_pass_thingy", :same)
  add_test("block_stmt_after", :same)
  add_test("block_stmt_before", :same)
  add_test("block_stmt_both", :same)
  add_test("bmethod", :same)
  add_test("bmethod_noargs", :same)
  add_test("bmethod_splat", :same)
  add_test("break", :same)
  add_test("break_arg", :same)
  add_test("call", :same)
  add_test("call_arglist", :same)
  add_test("call_arglist_hash", :same)
  add_test("call_arglist_norm_hash", :same)
  add_test("call_arglist_norm_hash_splat", :same)
  add_test("call_command", :same)
  add_test("call_expr", :same)
  add_test("call_index", :same)
  add_test("call_index_no_args", :same)
  add_test("call_index_space", :same)
  add_test("call_unary_neg", :same)
  add_test("case", :same)
  add_test("case_nested", :same)
  add_test("case_nested_inner_no_expr", :same)
  add_test("case_no_expr", :same)
  add_test("case_splat", :same)
  add_test("cdecl", :same)
  add_test("class_plain", :same)
  add_test("class_scoped", :same)
  add_test("class_scoped3", :same)
  add_test("class_super_array", :same)
  add_test("class_super_expr", :same)
  add_test("class_super_object", :same)
  add_test("colon2", :same)
  add_test("colon3", :same)
  add_test("conditional1", :same)
  add_test("conditional2", :same)
  add_test("conditional3", :same)
  add_test("conditional4", :same)
  add_test("conditional5", :same)
  add_test("conditional_post_if", :same)
  add_test("conditional_post_if_not", :same)
  add_test("conditional_post_unless", :same)
  add_test("conditional_post_unless_not", :same)
  add_test("conditional_pre_if", :same)
  add_test("conditional_pre_if_not", :same)
  add_test("conditional_pre_unless", :same)
  add_test("conditional_pre_unless_not", :same)
  add_test("const", :same)
  add_test("constX", :same)
  add_test("constY", :same)
  add_test("constZ", :same)
  add_test("cvar", :same)
  add_test("cvasgn", :same)
  add_test("cvasgn_cls_method", :same)
  add_test("cvdecl", :same)
  add_test("dasgn_0", :same)
  add_test("dasgn_1", :same)
  add_test("dasgn_2", :same)
  add_test("dasgn_curr", :same)
  add_test("dasgn_icky", :same)
  add_test("dasgn_mixed", :same)
  add_test("defined", :same)
  add_test("defn_args_mand_opt_block", :same)
  add_test("defn_args_mand_opt_splat", :same)
  add_test("defn_args_mand_opt_splat_block", :same)
  add_test("defn_args_mand_opt_splat_no_name", :same)
  add_test("defn_args_opt_block", :same)
  add_test("defn_args_opt_splat_no_name", :same)
  add_test("defn_empty", :same)
  add_test("defn_empty_args", :same)
  add_test("defn_lvar_boundary", :same)
  add_test("defn_optargs", :same)
  add_test("defn_or", :same)
  add_test("defn_rescue", :same)
  add_test("defn_something_eh", :same)
  add_test("defn_splat_no_name", :same)
  add_test("defn_zarray", :same)
  add_test("defs", :same)
  add_test("defs_args_mand_opt_splat_block", :same)
  add_test("defs_empty", :same)
  add_test("defs_empty_args", :same)
  add_test("dmethod", :same)
  add_test("dot2", :same)
  add_test("dot3", :same)
  add_test("dregx", :same)
  add_test("dregx_interp", :same)
  add_test("dregx_n", :same)
  add_test("dregx_once", :same)
  add_test("dregx_once_n_interp", :same)
  add_test("dstr", :same)
  add_test("dstr_2", :same)
  add_test("dstr_3", :same)
  add_test("dstr_concat", :same)
  add_test("dstr_heredoc_expand", :same)
  add_test("dstr_heredoc_windoze_sucks", :same)
  add_test("dstr_heredoc_yet_again", :same)
  add_test("dstr_nest", :same)
  add_test("dstr_str_lit_start", :same)
  add_test("dstr_the_revenge", :same)
  add_test("dsym", :same)
  add_test("dxstr", :same)
  add_test("ensure", :same)
  add_test("false", :same)
  add_test("fbody", :same)
  add_test("fcall_arglist", :same)
  add_test("fcall_arglist_hash", :same)
  add_test("fcall_arglist_norm_hash", :same)
  add_test("fcall_arglist_norm_hash_splat", :same)
  add_test("fcall_block", :same)
  add_test("fcall_index_space", :same)
  add_test("fcall_keyword", :same)
  add_test("flip2", :same)
  add_test("flip2_method", :same)
  add_test("flip3", :same)
  add_test("for", :same)
  add_test("for_no_body", :same)
  add_test("gasgn", :same)
  add_test("global", :same)
  add_test("gvar", :same)
  add_test("gvar_underscore", :same)
  add_test("gvar_underscore_blah", :same)
  add_test("hash", :same)
  add_test("hash_rescue", :same)
  add_test("iasgn", :same)
  add_test("if_block_condition", :same)
  add_test("if_lasgn_short", :same)
  add_test("iteration1", :same)
  add_test("iteration2", :same)
  add_test("iteration3", :same)
  add_test("iteration4", :same)
  add_test("iteration5", :same)
  add_test("iteration6", :same)
  add_test("iteration7", :same)
  add_test("iteration8", :same)
  add_test("iteration9", :same)
  add_test("iterationA", :same)
  add_test("iteration_dasgn_curr_dasgn_madness", :same)
  add_test("iteration_double_var", :same)
  add_test("iteration_masgn", :same)

  add_test("ivar",
           s(:defn, :reader,
             s(:args),
             s(:scope, s(:block, s(:return, s(:ivar, :@reader))))))

  add_test("lasgn_array", :same)
  add_test("lasgn_call", :same)
  add_test("lit_bool_false", :same)
  add_test("lit_bool_true", :same)
  add_test("lit_float", :same)
  add_test("lit_long", :same)
  add_test("lit_long_negative", :same)
  add_test("lit_range2", :same)
  add_test("lit_range3", :same)
  add_test("lit_regexp", :same)
  add_test("lit_regexp_i_wwtt", :same)
  add_test("lit_regexp_n", :same)
  add_test("lit_regexp_once", :same)
  add_test("lit_sym", :same)
  add_test("lit_sym_splat", :same)
  add_test("lvar_def_boundary", :same)
  add_test("masgn", :same)
  add_test("masgn_argscat", :same)
  add_test("masgn_attrasgn", :same)
  add_test("masgn_iasgn", :same)
  add_test("masgn_masgn", :same)
  add_test("masgn_splat", :same)
  add_test("masgn_splat_no_name_to_ary", :same)
  add_test("masgn_splat_no_name_trailing", :same)
  add_test("masgn_splat_to_ary", :same)
  add_test("masgn_splat_to_ary2", :same)
  add_test("match", :same)
  add_test("match2", :same)
  add_test("match3", :same)
  add_test("module", :same)
  add_test("module_scoped", :same)
  add_test("module_scoped3", :same)
  add_test("next", :same)
  add_test("next_arg", :same)
  add_test("not", :same)
  add_test("nth_ref", :same)
  add_test("op_asgn1", :same)
  add_test("op_asgn1_ivar", :same)
  add_test("op_asgn2", :same)
  add_test("op_asgn2_self", :same)
  add_test("op_asgn_and", :same)
  add_test("op_asgn_and_ivar2", :same)
  add_test("op_asgn_or", :same)
  add_test("op_asgn_or_block", :same)
  add_test("op_asgn_or_ivar", :same)
  add_test("op_asgn_or_ivar2", :same)
  add_test("or", :same)
  add_test("or_big", :same)
  add_test("or_big2", :same)
  add_test("parse_floats_as_args", :same)
  add_test("postexe", :same)
  add_test("proc_args_0", :same)
  add_test("proc_args_1", :same)
  add_test("proc_args_2", :same)
  add_test("proc_args_no", :same)
  add_test("redo", :same)
  add_test("rescue", :same)
  add_test("rescue_block_body", :same)
  add_test("rescue_block_nada", :same)
  add_test("rescue_exceptions", :same)
  add_test("retry", :same)
  add_test("return_0", :same)
  add_test("return_1", :same)
  add_test("return_n", :same)
  add_test("sclass", :same)
  add_test("sclass_trailing_class", :same)
  add_test("splat", :same)
  add_test("str", :same)
  add_test("str_concat_newline", :same)
  add_test("str_concat_space", :same)
  add_test("str_heredoc", :same)
  add_test("str_heredoc_call", :same)
  add_test("str_heredoc_double", :same)
  add_test("str_heredoc_indent", :same)
  add_test("str_interp_file", :same)
  add_test("structure_extra_block_for_dvar_scoping", :same)
  add_test("structure_remove_begin_1", :same)
  add_test("structure_remove_begin_2", :same)
  add_test("structure_unused_literal_wwtt", :same)
  add_test("super", :same)
  add_test("super_block_pass", :same)
  add_test("super_block_splat", :same)
  add_test("super_multi", :same)
  add_test("svalue", :same)
  add_test("to_ary", :same)
  add_test("true", :same)
  add_test("undef", :same)
  add_test("undef_2", :same)
  add_test("undef_3", :same)
  add_test("undef_block_1", :same)
  add_test("undef_block_2", :same)
  add_test("undef_block_3", :same)
  add_test("undef_block_3_post", :same)
  add_test("undef_block_wtf", :same)
  add_test("until_post", :same)
  add_test("until_post_not", :same)
  add_test("until_pre", :same)
  add_test("until_pre_mod", :same)
  add_test("until_pre_not", :same)
  add_test("until_pre_not_mod", :same)
  add_test("valias", :same)
  add_test("vcall", :same)
  add_test("while_post", :same)
  add_test("while_post_not", :same)
  add_test("while_pre", :same)
  add_test("while_pre_mod", :same)
  add_test("while_pre_nil", :same)
  add_test("while_pre_not", :same)
  add_test("while_pre_not_mod", :same)
  add_test("xstr", :same)
  add_test("yield", :same)
  add_test("yield_arg", :same)
  add_test("yield_args", :same)
  add_test("zarray", :same)
  add_test("zsuper", :same)
end
